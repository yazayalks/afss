@{
    ViewData["Title"] = "Selection";
}

<link rel="stylesheet" href="~/css/styles-selection.css">

@await Html.PartialAsync("MenuInput")

<div class="container">
    <div class="sub-menu">
        <div class="sub-menu__items">
            <div id = "authorization" class="sub-menu__item"><div class = "button button--orange">Авторизация</div></div>
            <div id = "registration" class="sub-menu__item"><div class = "button button--orange">Регистрация</div></div>
            <div id = "observation" class="sub-menu__item"><div class = "button button--orange">Наблюдение</div></div>
        </div>
    </div>
</div>

<script src="https://code.createjs.com/1.0.0/createjs.min.js"></script>
<script src="~/js/animate-big.js"></script>
<script>
var canvas, stage, exportRoot, anim_container, dom_overlay_container, fnStartAnimation;
function init() {
	canvas = document.getElementById("canvas");
	anim_container = document.getElementById("animation_container");
	dom_overlay_container = document.getElementById("dom_overlay_container");
	var comp=AdobeAn.getComposition("7B61A83CF4FCE643932E3479B16E314B");
	var lib=comp.getLibrary();
	var loader = new createjs.LoadQueue(false);
	loader.addEventListener("fileload", function(evt){handleFileLoad(evt,comp)});
	loader.addEventListener("complete", function(evt){handleComplete(evt,comp)});
	var lib=comp.getLibrary();
	loader.loadManifest(lib.properties.manifest);
}
function handleFileLoad(evt, comp) {
	var images=comp.getImages();	
	if (evt && (evt.item.type == "image")) { images[evt.item.id] = evt.result; }	
}
function handleComplete(evt,comp) {
	//This function is always called, irrespective of the content. You can use the variable "stage" after it is created in token create_stage.
	var lib=comp.getLibrary();
	var ss=comp.getSpriteSheet();
	var queue = evt.target;
	var ssMetadata = lib.ssMetadata;
	for(i=0; i<ssMetadata.length; i++) {
		ss[ssMetadata[i].name] = new createjs.SpriteSheet( {"images": [queue.getResult(ssMetadata[i].name)], "frames": ssMetadata[i].frames} )
	}
	exportRoot = new lib.animate();
	stage = new lib.Stage(canvas);	
	//Registers the "tick" event listener.
	fnStartAnimation = function() {
		stage.addChild(exportRoot);
		createjs.Ticker.framerate = lib.properties.fps;
		createjs.Ticker.addEventListener("tick", stage);
	}	    
	//Code to support hidpi screens and responsive scaling.
	AdobeAn.makeResponsive(false,'both',false,1,[canvas,anim_container,dom_overlay_container]);	
	AdobeAn.compositionLoaded(lib.properties.id);
	fnStartAnimation();
}
</script>

<div class="container">
<div id="mainInfo" onload="init();" style="padding:15px; margin-top:10px;">
	<div id="animation_container" style="background-color:rgba(255, 255, 255, 1.00); width:1220px; height:620px">
		<canvas id="canvas" width="1250" height="650" style="position: absolute; display: block; background-color:rgba(255, 255, 255, 1.00);"></canvas>
		<div id="dom_overlay_container" style="pointer-events:none; overflow:hidden; width:1250px; height:650px; position: absolute; left: 0px; top: 0px; display: block;">
		</div>
	</div>
</div>
</div>

<div class="container">
	<div id="mainInfo2" class="selection__photo">
                    <img src = "../images/logo-big.svg" alt="">
    </div>
</div>

@await Html.PartialAsync("Footer")

<script src="~/js/actions-selection.js"></script>

	<script> 

init();
	</script>
